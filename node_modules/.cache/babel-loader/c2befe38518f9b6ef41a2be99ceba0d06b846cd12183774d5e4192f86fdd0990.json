{"ast":null,"code":"var _jsxFileName = \"/home/jtimm/projects/courses/401/resty/src/app.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// --- 1. Initial state for reducer ---\nconst initialState = {\n  data: null,\n  // holds the API response\n  request: {},\n  // holds the current request (url, method, body)\n  loading: false,\n  // true while API request is running\n  history: [] // saves past requests + responses\n};\n\n// --- 2. Reducer function to handle state updates ---\nconst reducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case 'START_REQUEST':\n      // when Form submits a request, save it + set loading true\n      return {\n        ...state,\n        request: payload,\n        loading: true\n      };\n    case 'FINISH_REQUEST':\n      // when API returns, stop loading, save data + push into history\n      return {\n        ...state,\n        loading: false,\n        data: payload,\n        history: [...state.history, {\n          request: state.request,\n          data: payload\n        }]\n      };\n    case 'SHOW_HISTORY':\n      // when user clicks a past request, load its data into state\n      return {\n        ...state,\n        loading: 'history',\n        data: payload.data,\n        request: payload.request\n      };\n    default:\n      return state;\n  }\n};\nfunction App() {\n  _s();\n  // --- 3. useReducer replaces multiple useState hooks ---\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    request,\n    data,\n    loading,\n    history\n  } = state; // easier access\n\n  // --- 4. Triggered when Form submits ---\n  const callApi = requestParams => {\n    // payload includes: { method, url, body }\n    dispatch({\n      type: 'START_REQUEST',\n      payload: requestParams\n    });\n  };\n\n  // --- 5. Triggered when user clicks a history entry ---\n  const showHistoryData = entry => {\n    dispatch({\n      type: 'SHOW_HISTORY',\n      payload: entry\n    });\n  };\n\n  // --- 6. useEffect runs API calls whenever request changes ---\n  useEffect(() => {\n    const fetchData = async () => {\n      // only run if loading is true and request has method + url\n      if (loading === true && request.method && request.url) {\n        try {\n          const response = await axios({\n            method: request.method,\n            url: request.url,\n            data: request.body || {} // ðŸ‘ˆ include body if present\n          });\n\n          // save successful response\n          dispatch({\n            type: 'FINISH_REQUEST',\n            payload: response.data\n          });\n        } catch (error) {\n          // save error as data (so Results can display it)\n          console.error(\"API call failed:\", error);\n          dispatch({\n            type: 'FINISH_REQUEST',\n            payload: {\n              error: error.message\n            }\n          });\n        }\n      }\n    };\n    fetchData();\n  }, [request, loading]);\n  // ðŸ‘† only re-run when request or loading changes\n\n  // --- 7. What gets rendered on the page ---\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Request Method: \", request.method]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"URL: \", request.url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleApiCall: callApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      data: data,\n      loading: loading,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      history: history,\n      showHistory: showHistoryData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["initialState","data","request","loading","history","reducer","state","action","type","payload","App","_s","dispatch","useReducer","callApi","requestParams","showHistoryData","entry","useEffect","fetchData","method","url","response","axios","body","error","console","message","_jsxDEV","React","Fragment","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Form","handleApiCall","Results","History","showHistory","Footer","_c","$RefreshReg$"],"sources":["/home/jtimm/projects/courses/401/resty/src/app.js"],"sourcesContent":["// --- 1. Initial state for reducer ---\nconst initialState = {\n  data: null,       // holds the API response\n  request: {},      // holds the current request (url, method, body)\n  loading: false,   // true while API request is running\n  history: [],      // saves past requests + responses\n};\n\n// --- 2. Reducer function to handle state updates ---\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'START_REQUEST': \n      // when Form submits a request, save it + set loading true\n      return {\n        ...state,\n        request: payload,\n        loading: true,\n      };\n\n    case 'FINISH_REQUEST': \n      // when API returns, stop loading, save data + push into history\n      return {\n        ...state,\n        loading: false,\n        data: payload,\n        history: [...state.history, { request: state.request, data: payload }],\n      };\n\n    case 'SHOW_HISTORY': \n      // when user clicks a past request, load its data into state\n      return {\n        ...state,\n        loading: 'history',\n        data: payload.data,\n        request: payload.request,\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  // --- 3. useReducer replaces multiple useState hooks ---\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { request, data, loading, history } = state; // easier access\n\n  // --- 4. Triggered when Form submits ---\n  const callApi = (requestParams) => {\n    // payload includes: { method, url, body }\n    dispatch({ type: 'START_REQUEST', payload: requestParams });\n  };\n\n  // --- 5. Triggered when user clicks a history entry ---\n  const showHistoryData = (entry) => {\n    dispatch({ type: 'SHOW_HISTORY', payload: entry });\n  };\n\n  // --- 6. useEffect runs API calls whenever request changes ---\n  useEffect(() => {\n    const fetchData = async () => {\n      // only run if loading is true and request has method + url\n      if (loading === true && request.method && request.url) {\n        try {\n          const response = await axios({\n            method: request.method,\n            url: request.url,\n            data: request.body || {}, // ðŸ‘ˆ include body if present\n          });\n\n          // save successful response\n          dispatch({ type: 'FINISH_REQUEST', payload: response.data });\n\n        } catch (error) {\n          // save error as data (so Results can display it)\n          console.error(\"API call failed:\", error);\n          dispatch({ type: 'FINISH_REQUEST', payload: { error: error.message } });\n        }\n      }\n    };\n\n    fetchData();\n  }, [request, loading]); \n  // ðŸ‘† only re-run when request or loading changes\n\n  // --- 7. What gets rendered on the page ---\n  return (\n    <React.Fragment>\n      <Header />\n\n      {/* show current request */}\n      <div>Request Method: {request.method}</div>\n      <div>URL: {request.url}</div>\n\n      {/* Pass callback into Form so it can call API */}\n      <Form handleApiCall={callApi} />\n\n      {/* Results component shows the API data prettified */}\n      <Results data={data} loading={loading} history={history} />\n\n      {/* History shows clickable past requests */}\n      <History history={history} showHistory={showHistoryData} />\n\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}