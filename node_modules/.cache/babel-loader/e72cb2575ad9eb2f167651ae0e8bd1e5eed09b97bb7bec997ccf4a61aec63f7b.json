{"ast":null,"code":"var _jsxFileName = \"/home/jtimm/projects/courses/401/resty/src/components/form/index.js\",\n  _s = $RefreshSig$();\nimport './form.scss';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  // Keep track of which method the user selects (default = GET)\n  const [method, setMethod] = useState('GET');\n\n  // Store the URL typed by the user\n  const [url, setUrl] = useState('');\n\n  // Store the body text (only for POST/PUT requests)\n  const [body, setBody] = useState('');\n\n  // Runs when the form is submitted\n  const handleSubmit = e => {\n    e.preventDefault(); // stop page reload\n    const formData = {\n      method,\n      // GET, POST, PUT, DELETE\n      url,\n      // user’s input URL\n      body: method === 'POST' || method === 'PUT' ? body : null // include body only if needed\n    };\n    props.handleApiCall(formData); // send data up to App.js\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"URL: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"url\",\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value) // update state as user types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"GO!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"methods\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"get\",\n          className: method === 'GET' ? 'active' : '' // highlight if active\n          ,\n          onClick: () => setMethod('GET') // change method on click\n          ,\n          children: \"GET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"post\",\n          className: method === 'POST' ? 'active' : '',\n          onClick: () => setMethod('POST'),\n          children: \"POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"put\",\n          className: method === 'PUT' ? 'active' : '',\n          onClick: () => setMethod('PUT'),\n          children: \"PUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"delete\",\n          className: method === 'DELETE' ? 'active' : '',\n          onClick: () => setMethod('DELETE'),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), (method === 'POST' || method === 'PUT') && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: body,\n          onChange: e => setBody(e.target.value) // update body as user types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Form, \"kvXG0scWPiK5qybPDgDaf2pMbXY=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","props","_s","method","setMethod","url","setUrl","body","setBody","handleSubmit","e","preventDefault","formData","handleApiCall","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","name","type","value","onChange","target","className","id","onClick","_c","$RefreshReg$"],"sources":["/home/jtimm/projects/courses/401/resty/src/components/form/index.js"],"sourcesContent":["import './form.scss';\nimport React, { useState } from 'react';\n\nfunction Form(props) {\n  // Keep track of which method the user selects (default = GET)\n  const [method, setMethod] = useState('GET');\n\n  // Store the URL typed by the user\n  const [url, setUrl] = useState('');\n\n  // Store the body text (only for POST/PUT requests)\n  const [body, setBody] = useState('');\n\n  // Runs when the form is submitted\n  const handleSubmit = e => {\n    e.preventDefault(); // stop page reload\n    const formData = {\n      method, // GET, POST, PUT, DELETE\n      url,    // user’s input URL\n      body: method === 'POST' || method === 'PUT' ? body : null, // include body only if needed\n    };\n    props.handleApiCall(formData); // send data up to App.js\n  };\n\n  return (\n    <>\n      {/* Form wrapper that runs handleSubmit when user clicks GO */}\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>URL: </span>\n          {/* Input where user types the API URL */}\n          <input\n            name=\"url\"\n            type=\"text\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)} // update state as user types\n          />\n          <button type=\"submit\">GO!</button>\n        </label>\n\n        {/* Clickable method buttons (GET, POST, PUT, DELETE) */}\n        <label className=\"methods\">\n          <span\n            id=\"get\"\n            className={method === 'GET' ? 'active' : ''} // highlight if active\n            onClick={() => setMethod('GET')} // change method on click\n          >\n            GET\n          </span>\n          <span\n            id=\"post\"\n            className={method === 'POST' ? 'active' : ''}\n            onClick={() => setMethod('POST')}\n          >\n            POST\n          </span>\n          <span\n            id=\"put\"\n            className={method === 'PUT' ? 'active' : ''}\n            onClick={() => setMethod('PUT')}\n          >\n            PUT\n          </span>\n          <span\n            id=\"delete\"\n            className={method === 'DELETE' ? 'active' : ''}\n            onClick={() => setMethod('DELETE')}\n          >\n            DELETE\n          </span>\n        </label>\n\n        {/* Only show body text area for POST/PUT */}\n        {(method === 'POST' || method === 'PUT') && (\n          <label>\n            <span>Body:</span>\n            <textarea\n              value={body}\n              onChange={(e) => setBody(e.target.value)} // update body as user types\n            />\n          </label>\n        )}\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}