{"ast":null,"code":"var _jsxFileName = \"/home/jtimm/projects/courses/401/resty/src/app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './app.scss';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for the current request, response data, loading, and history\n  const [request, setRequest] = useState({}); // The method + URL (and maybe body if it’s POST/PUT)\n  const [data, setData] = useState(null); // The API data you want to show\n  const [loading, setLoading] = useState(false); // \n  const [history, setHistory] = useState([]);\n  const callApi = request => {\n    setRequest(request);\n    setLoading(true);\n\n    // Add the request to history\n    setHistory(prev => [...prev, {\n      method: request.method,\n      url: request.url\n    }]);\n\n    // Mock API response\n    setTimeout(() => {\n      const mockData = {\n        count: 2,\n        results: [{\n          name: 'fake thing 1',\n          url: 'http://fakethings.com/1'\n        }, {\n          name: 'fake thing 2',\n          url: 'http://fakethings.com/2'\n        }]\n      };\n      setData(mockData);\n      setLoading(false);\n    }, 1000); // simulate network delay\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Request Method: \", request.method]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"URL: \", request.url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      handleApiCall: callApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      data: data,\n      loading: loading,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tOyUoXjiW1cCa6p7QsRAtCfUFkA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Footer","Form","Results","jsxDEV","_jsxDEV","App","_s","request","setRequest","data","setData","loading","setLoading","history","setHistory","callApi","prev","method","url","setTimeout","mockData","count","results","name","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","handleApiCall","_c","$RefreshReg$"],"sources":["/home/jtimm/projects/courses/401/resty/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport './app.scss';\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\n\nfunction App() {\n  // State for the current request, response data, loading, and history\n  const [request, setRequest] = useState({}); // The method + URL (and maybe body if it’s POST/PUT)\n  const [data, setData] = useState(null); // The API data you want to show\n  const [loading, setLoading] = useState(false); // \n  const [history, setHistory] = useState([]);\n\n  const callApi = (request) => {\n    setRequest(request);\n    setLoading(true);\n\n    // Add the request to history\n    setHistory((prev) => [\n      ...prev,\n      { method: request.method, url: request.url }\n    ]);\n\n    // Mock API response\n    setTimeout(() => {\n      const mockData = {\n        count: 2,\n        results: [\n          { name: 'fake thing 1', url: 'http://fakethings.com/1' },\n          { name: 'fake thing 2', url: 'http://fakethings.com/2' },\n        ],\n      };\n\n      setData(mockData);\n      setLoading(false);\n    }, 1000); // simulate network delay\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div>Request Method: {request.method}</div>\n      <div>URL: {request.url}</div>\n\n      {/* Pass callApi to Form */}\n      <Form handleApiCall={callApi} />\n\n      {/* Pass history and loading state to Results */}\n      <Results data={data} loading={loading} history={history} />\n\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,YAAY;AAEnB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMiB,OAAO,GAAIR,OAAO,IAAK;IAC3BC,UAAU,CAACD,OAAO,CAAC;IACnBK,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACAE,UAAU,CAAEE,IAAI,IAAK,CACnB,GAAGA,IAAI,EACP;MAAEC,MAAM,EAAEV,OAAO,CAACU,MAAM;MAAEC,GAAG,EAAEX,OAAO,CAACW;IAAI,CAAC,CAC7C,CAAC;;IAEF;IACAC,UAAU,CAAC,MAAM;MACf,MAAMC,QAAQ,GAAG;QACfC,KAAK,EAAE,CAAC;QACRC,OAAO,EAAE,CACP;UAAEC,IAAI,EAAE,cAAc;UAAEL,GAAG,EAAE;QAA0B,CAAC,EACxD;UAAEK,IAAI,EAAE,cAAc;UAAEL,GAAG,EAAE;QAA0B,CAAC;MAE5D,CAAC;MAEDR,OAAO,CAACU,QAAQ,CAAC;MACjBR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,oBACER,OAAA,CAACP,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACbrB,OAAA,CAACL,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzB,OAAA;MAAAqB,QAAA,GAAK,kBAAgB,EAAClB,OAAO,CAACU,MAAM;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3CzB,OAAA;MAAAqB,QAAA,GAAK,OAAK,EAAClB,OAAO,CAACW,GAAG;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAG7BzB,OAAA,CAACH,IAAI;MAAC6B,aAAa,EAAEf;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGhCzB,OAAA,CAACF,OAAO;MAACO,IAAI,EAAEA,IAAK;MAACE,OAAO,EAAEA,OAAQ;MAACE,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3DzB,OAAA,CAACJ,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACvB,EAAA,CA/CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}