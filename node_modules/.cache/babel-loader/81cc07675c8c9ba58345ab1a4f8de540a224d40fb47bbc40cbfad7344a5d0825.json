{"ast":null,"code":"var _jsxFileName = \"/home/jtimm/projects/courses/401/resty/src/components/results/index.js\";\nimport React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport 'react-json-pretty/themes/monikai.css'; // pre-made dark theme\nimport './results.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Results({\n  data,\n  loading,\n  history\n}) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), history.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No requests made yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this) // if nothing in history\n    : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: history.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `method ${entry.method.toLowerCase()}`,\n          children: entry.method\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), \"\\xA0\\u2192 \", entry.url, \" \"]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), !loading && data && /*#__PURE__*/_jsxDEV(JSONPretty, {\n      id: \"json-pretty\",\n      data: JSON.stringify(data, null, 2) // nicely formatted JSON\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","JSONPretty","jsxDEV","_jsxDEV","Results","data","loading","history","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","entry","idx","className","method","toLowerCase","url","id","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/jtimm/projects/courses/401/resty/src/components/results/index.js"],"sourcesContent":["import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport 'react-json-pretty/themes/monikai.css'; // pre-made dark theme\nimport './results.scss';\n\nfunction Results({ data, loading, history }) {\n  return (\n    <section>\n      {/* =========================\n           Request History\n           Show a list of previous API requests\n      ========================== */}\n      <h2>Request History</h2>\n      {history.length === 0 ? (\n        <p>No requests made yet.</p> // if nothing in history\n      ) : (\n        <ul>\n          {history.map((entry, idx) => (\n            <li key={idx}>\n              {/* REST method badge, styled via SCSS */}\n              <span className={`method ${entry.method.toLowerCase()}`}>\n                {entry.method}\n              </span>\n              &nbsp;â†’ {entry.url} {/* URL of the request */}\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {/* =========================\n           Response Section\n           Show Loading or JSON response\n      ========================== */}\n      <h2>Response</h2>\n\n      {/* Show loading text if waiting for API */}\n      {loading && <p>Loading...</p>}\n\n      {/* Show pretty JSON if response exists and not loading */}\n      {!loading && data && (\n        <JSONPretty \n          id=\"json-pretty\" \n          data={JSON.stringify(data, null, 2)} // nicely formatted JSON\n        ></JSONPretty>\n      )}\n    </section>\n  );\n}\n\nexport default Results;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAO,sCAAsC,CAAC,CAAC;AAC/C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,OAAOA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAQ,CAAC,EAAE;EAC3C,oBACEJ,OAAA;IAAAK,QAAA,gBAKEL,OAAA;MAAAK,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBL,OAAO,CAACM,MAAM,KAAK,CAAC,gBACnBV,OAAA;MAAAK,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,eAE7BT,OAAA;MAAAK,QAAA,EACGD,OAAO,CAACO,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACtBb,OAAA;QAAAK,QAAA,gBAEEL,OAAA;UAAMc,SAAS,EAAE,UAAUF,KAAK,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,EAAG;UAAAX,QAAA,EACrDO,KAAK,CAACG;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACC,EAACG,KAAK,CAACK,GAAG,EAAC,GAAC;MAAA,GALbJ,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMR,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,eAMDT,OAAA;MAAAK,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGhBN,OAAO,iBAAIH,OAAA;MAAAK,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAG5B,CAACN,OAAO,IAAID,IAAI,iBACfF,OAAA,CAACF,UAAU;MACToB,EAAE,EAAC,aAAa;MAChBhB,IAAI,EAAEiB,IAAI,CAACC,SAAS,CAAClB,IAAI,EAAE,IAAI,EAAE,CAAC,CAAE,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACd;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEd;AAACY,EAAA,GA1CQpB,OAAO;AA4ChB,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}